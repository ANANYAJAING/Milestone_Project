import cv2

harcascade = "model/haarcascade_russian_plate_number.xml"

url = "http://192.168.94.82:8080/video"
cap = cv2.VideoCapture(url)
if not cap.isOpened():
    print(f"Error: Could not open video stream from {url}")
    exit()

cap.set(3,640) #width
cap.set(4,480) #height

min_area = 600
count = 0

while True:
    success,img = cap.read()

    plate_cascade = cv2.CascadeClassifier(harcascade)
    img_gray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)

    plates = plate_cascade.detectMultiScale(img_gray,1.1,4)

    for (x,y,w,h) in plates:
        area = w*h

        if area >min_area:
            cv2.rectangle(img, (x,y), (x+w, y+h), (255,0,0), 2)
            cv2.putText(img, "Number Plate", (x,y-5), cv2.FONT_HERSHEY_COMPLEX_SMALL, 1, (255, 0, 255), 2)

            img_roi = img[y: y+h, x:x+w]
            cv2.imshow("ROI", img_roi)
    cv2.imshow("Result", img)

    key = cv2.waitKey(1) & 0xFF 
    if key == ord('s'):
            cv2.imwrite("plates/scaned_img_" + str(count) + ".jpg", img_roi)
            cv2.rectangle(img, (0,200), (640,300), (0,255,0), cv2.FILLED)
            cv2.putText(img, "Plate Saved", (150, 265), cv2.FONT_HERSHEY_COMPLEX_SMALL, 2, (0, 0, 255), 2)
            cv2.imshow("Results",img)
            cv2.waitKey(500)
            count += 1
    elif key == ord('q'):
          break   
cap.release()
cv2.destroyAllWindows()

